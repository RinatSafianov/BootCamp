---
openapi: 3.0.2
info:
  title: Customer API
  version: 1.0.0
paths:
  /Customers:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewCustomer'
            examples:
              New Customer:
                value:
                  name: Иван
                  lastName: Иванов
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
              examples:
                Customer info:
                  value:
                    id: 2
                    name: Иван
                    lastName: Иванов
          description: customer response
      operationId: addCustomer
      description: Создание нового клиента
  /Customers/{customerId}:
    get:
      parameters:
      - examples:
          Логин клиента:
            value: "1"
        name: customerId
        description: Логин клиента
        schema:
          type: integer
        in: path
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
              examples:
                Find customer:
                  value:
                    id: 1
                    name: Петр
                    lastName: Петрович
          description: customer response
      operationId: findCustomerById
      description: Получение информации по логину клиента
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewCustomer'
            examples:
              Изменение клиента:
                value:
                  name: Степан
                  lastName: Петров
        required: true
      parameters:
      - examples:
          Логин клиента:
            value: "3"
        name: customerId
        description: Логин клиента
        schema:
          type: integer
        in: path
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
              examples:
                Пример ответа:
                  value:
                    id: 3
                    name: Степан
                    LastName: Петров
          description: customer response
      operationId: updateCustomer
      description: Обновление данных о клиенте по логину
    delete:
      parameters:
      - examples:
          Логин клиента:
            value: "3"
        name: customerId
        description: Логин клиента
        schema:
          type: integer
        in: path
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
        "204":
          description: customer deleted
      operationId: deleteCustomer
      description: Удаление клиента с указанным логином
    parameters:
    - name: customerId
      in: path
      required: true
  /Orders/{orderId}:
    get:
      parameters:
      - examples:
          Пример запроса:
            value: "50"
        name: orderId
        description: Код заказа
        schema:
          type: integer
        in: path
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
              examples:
                Пример ответа:
                  value:
                    qty: 39
                    customerId: 73
                    itemId: 92
                    orderStatus: Canceled
          description: order response
      operationId: findOrder
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrder'
            examples:
              Пример запроса:
                value:
                  orderStatus: Canceled
                  qty: 83
                  itemId: 86
        required: false
      parameters:
      - examples:
          Пример запроса:
            value: "49"
        name: orderId
        description: Код заказа
        schema:
          type: integer
        in: path
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
              examples:
                Пример ответа:
                  value:
                    orderId: 55
                    itemId: 13
                    qty: 68
                    customerId: 77
                    orderStatus: New
          description: order response
      operationId: updateOrder
    parameters:
    - name: orderId
      in: path
      required: true
  /Orders:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewOrder'
            examples:
              Пример запроса:
                value:
                  qty: 39
                  customerId: 73
                  itemId: 92
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
              examples:
                Пример ответа:
                  value:
                    qty: 39
                    customerId: 73
                    itemId: 92
                    orderStatus: New
          description: order response
      operationId: createOrder
components:
  schemas:
    NewCustomer:
      description: ""
      required:
      - name
      - lastName
      type: object
      properties:
        name:
          description: ""
          type: string
        lastName:
          description: ""
          type: string
    Error:
      description: ""
      required:
      - code
      - message
      type: object
      properties:
        code:
          description: ""
          type: integer
        message:
          description: ""
          type: string
    Customer:
      description: ""
      type: object
      allOf:
      - required:
        - id
        type: object
        properties:
          id:
            description: ""
            type: integer
      - $ref: '#/components/schemas/NewCustomer'
    NewOrder:
      description: ""
      required:
      - itemId
      - qty
      - customerId
      type: object
      properties:
        qty:
          description: ""
          type: integer
        customerId:
          description: ""
          type: integer
        itemId:
          description: ""
          type: integer
    Order:
      description: ""
      type: object
      allOf:
      - required:
        - orderId
        - orderStatus
        type: object
        properties:
          orderId:
            description: ""
            type: integer
          orderStatus:
            description: ""
            enum:
            - New
            - Canceled
            type: string
      - $ref: '#/components/schemas/NewOrder'
    UpdateOrder:
      description: ""
      required: []
      type: object
      properties:
        orderStatus:
          description: ""
          enum:
          - New
          - Canceled
          type: string
        qty:
          description: ""
          type: integer
        itemId:
          description: ""
          type: integer
